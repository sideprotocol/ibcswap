syntax = "proto3";

package ibc.applications.interchain_swap.v1;

option go_package = "github.com/sideprotocol/ibcswap/v6/modules/apps/101-interchain-swap/types";

import "gogoproto/gogo.proto";
import "google/protobuf/any.proto";
import "cosmos/base/v1beta1/coin.proto";
import "cosmos/tx/v1beta1/tx.proto";
import "ibc/core/client/v1/client.proto";
import "ibc/applications/interchain_swap/v1/market.proto";


// Msg defines the ibc/swap Msg service.
// Msg defines the Msg service.
// Msg defines the Msg service.
service Msg {
  rpc MakePool (MsgMakePoolRequest) returns (MsgMakePoolResponse);
  rpc TakePool (MsgTakePoolRequest) returns (MsgTakePoolResponse);

  rpc SingleAssetDeposit    (MsgSingleAssetDepositRequest   ) returns (MsgSingleAssetDepositResponse   );
  rpc MakeMultiAssetDeposit    (MsgMakeMultiAssetDepositRequest   ) returns (MsgMultiAssetDepositResponse   );
  rpc TakeMultiAssetDeposit    (MsgTakeMultiAssetDepositRequest   ) returns (MsgMultiAssetDepositResponse   );
  rpc MultiAssetWithdraw   (MsgMultiAssetWithdrawRequest  ) returns (MsgMultiAssetWithdrawResponse  );
  rpc Swap       (MsgSwapRequest             ) returns (MsgSwapResponse      );
}
message MsgMakePoolRequest {
           string sourcePort     = 1;
           string sourceChannel  = 2;
           string creator        = 3;
           string counterPartyCreator = 4;
  repeated PoolAsset liquidity = 5;
           uint32 swapFee = 6;
           ibc.core.client.v1.Height timeoutHeight = 8 [(gogoproto.moretags) = "yaml:\"timeout_height\""];
           uint64 timeoutTimeStamp  = 9;           
}

message MsgMakePoolResponse {
  string poolId = 1;
}


message MsgTakePoolRequest {
  string creator = 1;
  string poolId  = 2;
  string port     = 3;
  string channel  = 4;
  ibc.core.client.v1.Height timeoutHeight = 5 [(gogoproto.moretags) = "yaml:\"timeout_height\""];
  uint64 timeoutTimeStamp  = 6;           
}

message MsgTakePoolResponse {
  string poolId  = 1;        
}


message MsgSingleAssetDepositRequest {
           string                         poolId = 1 ;
           string                         sender = 2 ;
           cosmos.base.v1beta1.Coin       token = 3;
           string port     = 4;
           string channel  = 5;
           ibc.core.client.v1.Height timeoutHeight = 6;
           uint64 timeoutTimeStamp  = 7;  
}

message MsgSingleAssetDepositResponse {
  cosmos.base.v1beta1.Coin poolToken = 1;
}

// make multi-asset deposit order
message MsgMakeMultiAssetDepositRequest {
  string        poolId = 1;
  repeated DepositAsset deposits = 2;
  string port     = 3;
  string channel  = 4;
  ibc.core.client.v1.Height timeoutHeight = 5;
  uint64 timeoutTimeStamp  = 6; 
}

// make multi-asset deposit order
message MsgTakeMultiAssetDepositRequest {
  string        sender = 1;
  string        poolId = 2;
  string        orderId = 3;
  string port     = 4;
  string channel  = 5;
  ibc.core.client.v1.Height timeoutHeight = 6;
  uint64 timeoutTimeStamp  = 7; 
}

message DepositAsset {
  string sender = 1;
  cosmos.base.v1beta1.Coin balance = 2;
}

message MsgMultiAssetDepositResponse {
  repeated cosmos.base.v1beta1.Coin poolTokens = 1;
}

message MsgMultiAssetWithdrawRequest {
  string poolId = 1;
  string receiver = 2;
  string counterPartyReceiver = 3;
  cosmos.base.v1beta1.Coin poolToken = 4;
  string port     = 5;
  string channel  = 6;
  ibc.core.client.v1.Height timeoutHeight = 7;
  uint64 timeoutTimeStamp  = 8;  
}

message MsgMultiAssetWithdrawResponse {
  repeated cosmos.base.v1beta1.Coin tokens = 1;
}

enum SwapMsgType {
  LEFT = 0;
  RIGHT = 1;
}
message MsgSwapRequest {
  SwapMsgType swap_type = 1;
  string sender    = 2;
  string poolId = 3;
  cosmos.base.v1beta1.Coin tokenIn = 4;
  cosmos.base.v1beta1.Coin tokenOut = 5;
  uint64 slippage  = 6;
  string recipient = 7;
  string port     = 8;
  string channel  = 9;
  ibc.core.client.v1.Height timeoutHeight = 10;
  uint64 timeoutTimeStamp  = 11;   
}

message MsgSwapResponse {
  SwapMsgType swap_type = 1;
  repeated cosmos.base.v1beta1.Coin tokens = 2;
}

