syntax = "proto3";

package ibc.applications.interchain_swap.v1;
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/sideprotocol/ibcswap/v6/modules/apps/101-interchain-swap/types";


enum PoolAssetSide {
  SOURCE = 0;
  DESTINATION = 1;
}

enum PoolStatus {
  INITIALIZED = 0;
  ACTIVE = 1;
}
message PoolAsset {
  PoolAssetSide side = 1;
  cosmos.base.v1beta1.Coin balance = 2;
  uint32 weight = 3;
  uint32 decimal = 4; 
}

message InterchainLiquidityPool {
  string id = 1;
  string sourceCreator = 2;
  string destinationCreator = 3;
  repeated PoolAsset assets = 4;
  uint32 swapFee = 5;
  cosmos.base.v1beta1.Coin supply = 6;
  PoolStatus status = 7;
  uint64 pool_price = 8;
  string sourceChainId = 9;
  string counterPartyPort = 10; 
  string counterPartyChannel = 11;
}


message InterchainMarketMaker {
  string poolId = 1; 
  InterchainLiquidityPool pool = 2; 
}

// MarketFeeUpdateProposal details a proposal for updating market fee.

message MarketFeeUpdateProposal {
  option deprecated                          = true;
  option (gogoproto.equal)                   = false;
  option (gogoproto.goproto_getters)         = false;

  string   title                           = 1;
  string   description                     = 2;
  string   pool_id                         = 3;
  uint32   fee_rate                        = 4;
}

enum OrderStatus {
  PENDING = 0;
  COMPLETE = 1;
}


// multi asset deposit order
message MultiAssetDepositOrder {
  uint64 id = 1;
  string poolId = 2;
  string chainId = 3;
  string sourceMaker = 4;
  string destinationTaker = 5;
  repeated cosmos.base.v1beta1.Coin deposits = 6;
  OrderStatus status = 8;
  int64 createdAt = 9;
}


